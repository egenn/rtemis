% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gridSearchLearn_future.R,
%   R/gridSearchLearn_future_id.colname.R
\name{gridSearchLearn}
\alias{gridSearchLearn}
\title{\pkg{rtemis} internal: Grid Search for Hyperparameter Tuning of \pkg{rtemis} Learners}
\usage{
gridSearchLearn(
  x,
  y,
  mod,
  grid.params,
  fixed.params = NULL,
  search.type = c("exhaustive", "randomized"),
  resample.rtset = rtset.resample(),
  randomized.p = 0.05,
  weights = NULL,
  error.aggregate.fn = mean,
  metric = NULL,
  maximize = NULL,
  save.mod = FALSE,
  verbose = TRUE,
  trace = 0,
  call.depth = 1,
  grid.verbose = FALSE,
  n.cores = rtCores
)

gridSearchLearn(
  x,
  y,
  mod,
  grid.params,
  fixed.params = NULL,
  search.type = c("exhaustive", "randomized"),
  resample.rtset = rtset.resample(),
  randomized.p = 0.05,
  weights = NULL,
  error.aggregate.fn = mean,
  metric = NULL,
  maximize = NULL,
  save.mod = FALSE,
  verbose = TRUE,
  trace = 0,
  call.depth = 1,
  grid.verbose = FALSE,
  n.cores = rtCores
)
}
\arguments{
\item{x}{features - training set. Will be resampled to multiple train-test sets}

\item{y}{outcome - training set. Will be resampled to multiple train-test sets}

\item{mod}{Character: \pkg{rtemis} model. See \code{modSelect()} gives available models}

\item{grid.params}{List of named elements, each is a vector of values}

\item{fixed.params}{List of named elements, each is a single value}

\item{search.type}{Character: "exhaustive" (Default), "randomized". Type of
grid search to use. Exhaustive search will try all combinations of
parameters. Randomized will try a random sample of size
\code{randomize.p} * \code{N of total combinations}}

\item{resample.rtset}{List: Output of \code{rtset.grid.resample()}}

\item{randomized.p}{Float (0, 1): For \code{search.type == "exhaustive"},
sample this portion of combination. Default = .05}

\item{weights}{Float, vector: Case weights}

\item{error.aggregate.fn}{Function: Use this when aggregating error metrics.
Default = mean}

\item{metric}{Character: Metric to minimize or maximize}

\item{maximize}{Logical: If TRUE, maximize \code{metric}}

\item{save.mod}{Logical: If TRUE, save all trained models. Default = FALSE}

\item{verbose}{Logical: If TRUE, print messages to screen}

\item{call.depth}{Integer: passed to \link{msg}. Default = 2}

\item{grid.verbose}{Logical: Passed to \code{learner}'s \code{verbose}
argument}

\item{n.cores}{Integer: Number of cores to use}
}
\description{
Train models using a combination of parameter values for model selection

Train models using a combination of parameter values for model selection
}
\details{
Note that weights, if defined (and not NULL), should be passed directly to \code{gridSearchLearn}
as they need to be resampled along \code{x} and \code{y}, and should not be passed along with
\code{grid.params}. \code{ipw} and \code{ipw.type} should be passed as part of \code{grid.params}
and will be passed on to the learner.
Includes a special case for training \link{s_H2OGBM} or \link{s_GBM} which requires extracting and averaging n.trees
along with params.

Note that weights, if defined (and not NULL), should be passed directly to \code{gridSearchLearn}
as they need to be resampled along \code{x} and \code{y}, and should not be passed along with
\code{grid.params}. \code{ipw} and \code{ipw.type} should be passed as part of \code{grid.params}
and will be passed on to the learner.
Includes a special case for training \link{s_H2OGBM} or \link{s_GBM} which requires extracting and averaging n.trees
along with params.
}
\author{
E.D. Gennatas
}
\keyword{internal}
