% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/s_RFSRC.R
\name{s_RFSRC}
\alias{s_RFSRC}
\title{Random Forest for Classification, Regression, and Survival [C, R, S]}
\usage{
s_RFSRC(
  x,
  y = NULL,
  x.test = NULL,
  y.test = NULL,
  x.name = NULL,
  y.name = NULL,
  n.trees = 1000,
  weights = NULL,
  ipw = TRUE,
  ipw.type = 2,
  upsample = FALSE,
  downsample = FALSE,
  resample.seed = NULL,
  bootstrap = "by.root",
  mtry = NULL,
  importance = TRUE,
  proximity = TRUE,
  nodesize = if (!is.null(y) && !is.factor(y)) 5 else 1,
  nodedepth = NULL,
  na.action = "na.impute",
  trace = FALSE,
  print.plot = FALSE,
  plot.fitted = NULL,
  plot.predicted = NULL,
  plot.theme = rtTheme,
  question = NULL,
  rtclass = NULL,
  verbose = TRUE,
  outdir = NULL,
  save.mod = ifelse(!is.null(outdir), TRUE, FALSE),
  ...
)
}
\arguments{
\item{x}{Numeric vector or matrix of features, i.e. independent variables}

\item{y}{Numeric vector of outcome, i.e. dependent variable}

\item{x.test}{(Optional) Numeric vector or matrix of validation set features
must have set of columns as \code{x}}

\item{y.test}{(Optional) Numeric vector of validation set outcomes}

\item{n.trees}{Integer: Number of trees to grow. The more the merrier.}

\item{bootstrap}{Character:}

\item{mtry}{Integer: Number of features sampled randomly at each split}

\item{outdir}{Optional. Path to directory to save output}

\item{...}{Additional arguments to be passed to \code{randomForestSRC::rfsrc}}
}
\value{
Object of class \link{rtMod}
}
\description{
Train a Random Forest for Regression, Classification, or Survival Regression
using \code{randomForestSRC}
}
\details{
For Survival Regression, y must be an object of type \code{Surv}, created using
\code{survival::Surv(time, status)}
\code{mtry} is the only tunable parameter, but it usually only makes a small difference
and is often not tuned.
}
\seealso{
\link{elevate} for external cross-validation

Other Supervised Learning: 
\code{\link{s_ADABOOST}()},
\code{\link{s_ADDTREE}()},
\code{\link{s_BART}()},
\code{\link{s_BAYESGLM}()},
\code{\link{s_BRUTO}()},
\code{\link{s_C50}()},
\code{\link{s_CART}()},
\code{\link{s_CTREE}()},
\code{\link{s_ET}()},
\code{\link{s_EVTREE}()},
\code{\link{s_GAM.default}()},
\code{\link{s_GAM.formula}()},
\code{\link{s_GAMSELX2}()},
\code{\link{s_GAMSELX}()},
\code{\link{s_GAMSEL}()},
\code{\link{s_GAM}()},
\code{\link{s_GBM3}()},
\code{\link{s_GBM}()},
\code{\link{s_GLMNET}()},
\code{\link{s_GLMTREE}()},
\code{\link{s_GLM}()},
\code{\link{s_GLS}()},
\code{\link{s_H2ODL}()},
\code{\link{s_H2OGBM}()},
\code{\link{s_H2ORF}()},
\code{\link{s_HAL}()},
\code{\link{s_IRF}()},
\code{\link{s_KNN}()},
\code{\link{s_LDA}()},
\code{\link{s_LMTREE}()},
\code{\link{s_LM}()},
\code{\link{s_MARS}()},
\code{\link{s_MLRF}()},
\code{\link{s_NBAYES}()},
\code{\link{s_NLA}()},
\code{\link{s_NLS}()},
\code{\link{s_NW}()},
\code{\link{s_POLYMARS}()},
\code{\link{s_PPR}()},
\code{\link{s_PPTREE}()},
\code{\link{s_QDA}()},
\code{\link{s_QRNN}()},
\code{\link{s_RANGER}()},
\code{\link{s_RF}()},
\code{\link{s_SDA}()},
\code{\link{s_SGD}()},
\code{\link{s_SPLS}()},
\code{\link{s_SVM}()},
\code{\link{s_TFN}()},
\code{\link{s_XGBOOST}()},
\code{\link{s_XRF}()}

Other Tree-based methods: 
\code{\link{s_ADABOOST}()},
\code{\link{s_ADDTREE}()},
\code{\link{s_BART}()},
\code{\link{s_C50}()},
\code{\link{s_CART}()},
\code{\link{s_CTREE}()},
\code{\link{s_ET}()},
\code{\link{s_EVTREE}()},
\code{\link{s_GBM3}()},
\code{\link{s_GBM}()},
\code{\link{s_GLMTREE}()},
\code{\link{s_H2OGBM}()},
\code{\link{s_H2ORF}()},
\code{\link{s_IRF}()},
\code{\link{s_LMTREE}()},
\code{\link{s_MLRF}()},
\code{\link{s_PPTREE}()},
\code{\link{s_RANGER}()},
\code{\link{s_RF}()},
\code{\link{s_XGBOOST}()},
\code{\link{s_XRF}()}
}
\author{
E.D. Gennatas
}
\concept{Supervised Learning}
\concept{Tree-based methods}
