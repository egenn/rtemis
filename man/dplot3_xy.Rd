% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dplot3_xy.R
\name{dplot3_xy}
\alias{dplot3_xy}
\title{Interactive Scatter Plots}
\usage{
dplot3_xy(
  x,
  y = NULL,
  fit = NULL,
  se.fit = FALSE,
  se.times = 1.96,
  include.fit.name = TRUE,
  cluster = NULL,
  cluster.params = list(k = 2),
  group = NULL,
  formula = NULL,
  rsq = TRUE,
  mode = "markers",
  order.on.x = NULL,
  main = NULL,
  subtitle = NULL,
  xlab = NULL,
  ylab = NULL,
  col = NULL,
  alpha = NULL,
  theme = rtTheme,
  palette = rtPalette,
  axes.square = FALSE,
  group.names = NULL,
  font.size = 16,
  marker.col = NULL,
  marker.size = 8,
  symbol = "circle",
  fit.col = NULL,
  fit.alpha = 0.8,
  fit.lwd = 2.5,
  se.col = NULL,
  se.alpha = 0.4,
  scatter.type = "scatter",
  show.marginal.x = FALSE,
  show.marginal.y = FALSE,
  marginal.x = x,
  marginal.y = y,
  marginal.x.y = NULL,
  marginal.y.x = NULL,
  marginal.col = NULL,
  marginal.alpha = 0.333,
  marginal.size = 10,
  legend = NULL,
  legend.xy = c(0, 0.98),
  legend.xanchor = "left",
  legend.yanchor = "auto",
  legend.orientation = "v",
  legend.col = NULL,
  legend.bg = "#FFFFFF00",
  legend.border.col = "#FFFFFF00",
  legend.borderwidth = 0,
  legend.group.gap = 0,
  x.showspikes = FALSE,
  y.showspikes = FALSE,
  spikedash = "solid",
  spikemode = "across",
  spikesnap = "hovered data",
  spikecolor = NULL,
  spikethickness = 1,
  margin = list(b = 65, l = 65, t = 50, r = 10, pad = 0),
  main.y = 1,
  main.yanchor = "bottom",
  subtitle.x = 0.02,
  subtitle.y = 0.99,
  subtitle.xref = "paper",
  subtitle.yref = "paper",
  subtitle.xanchor = "left",
  subtitle.yanchor = "top",
  automargin.x = TRUE,
  automargin.y = TRUE,
  xlim = NULL,
  ylim = NULL,
  axes.equal = FALSE,
  diagonal = FALSE,
  diagonal.col = NULL,
  diagonal.alpha = 0.2,
  fit.params = list(),
  vline = NULL,
  vline.col = theme$fg,
  vline.width = 1,
  vline.dash = "dot",
  hline = NULL,
  hline.col = theme$fg,
  hline.width = 1,
  hline.dash = "dot",
  hovertext = NULL,
  width = NULL,
  height = NULL,
  displayModeBar = TRUE,
  modeBar.file.format = "svg",
  scrollZoom = TRUE,
  filename = NULL,
  file.width = 500,
  file.height = 500,
  file.scale = 1,
  trace = 0,
  ...
)
}
\arguments{
\item{x}{Numeric, vector/data.frame/list: x-axis data. If y is NULL and
\code{NCOL(x) > 1}, first two columns used as \code{x} and \code{y}, respectively}

\item{y}{Numeric, vector/data.frame/list: y-axis data}

\item{fit}{Character: \pkg{rtemis} model to calculate \code{y ~ x} fit.
Options: see \code{select_learn()}
Can also be Logical, which will give a GAM fit if TRUE. If you specify
"NLA", the activation function should be passed as a string.}

\item{se.fit}{Logical: If TRUE, draw the standard error of the fit}

\item{se.times}{Draw polygon or lines at +/- \code{se.times} * standard
error of fit. Defaults to 1.96, which corresponds to 95 percent confidence interval}

\item{include.fit.name}{Logical: If TRUE, include fit name in legend.}

\item{cluster}{Character: Clusterer name. Will cluster
\code{data.frame(x, y)} and pass result to \code{group}.
Run \link{select_clust} for options}

\item{cluster.params}{List: Names list of parameters to pass to the
\code{cluster} function}

\item{group}{Vector: Will be converted to factor; levels define group
members. Default = NULL}

\item{formula}{Formula: Provide a formula to be solved using \link{s_NLS}.
If provided, \code{fit} is forced to \code{'nls'}. e.g. y ~ b * m ^ x for a
power curve. Note: \code{nls} is powerful but is prone to errors
and warnings. Use single letters for parameter names, no numbers.}

\item{rsq}{Logical: If TRUE, print R-squared values in legend if \code{fit} is set}

\item{mode}{Character, vector: "markers", "lines", "markers+lines".}

\item{order.on.x}{Logical: If TRUE, order \code{x} and \code{y} on \code{x}. Default = NULL,
which becomes \code{TRUE} if \code{mode} includes lines.}

\item{main}{Character: Main plot title.}

\item{subtitle}{Character: Subtitle}

\item{xlab}{Character: x-axis label.}

\item{ylab}{Character: y-axis label.}

\item{col}{Color for markers. Default=NULL, which will draw colors from palette}

\item{alpha}{Float (0, 1]: Transparency for bar colors. Default = .8}

\item{theme}{List or Character: Either the output of a \verb{theme_*()} function or the name of  a
theme. Use \code{themes()} to get available theme names. Theme functions are of the form
\verb{theme_<name>}.}

\item{palette}{Character: Name of \pkg{rtemis} palette to use.
Default = "rtCol1". Only used if \code{col = NULL}}

\item{axes.square}{Logical: If TRUE: draw a square plot to fill the graphic device.
Default = FALSE. Note: If TRUE, the device size at time of call is captured and
height and width are set so as to draw the largest square available. This means that
resizing the device window will not automatically resize the plot.}

\item{group.names}{Character, vector, length = NROW(x): Group names.
Default = NULL, which uses \code{rownames(x)}}

\item{font.size}{Float: Font size for all labels. Default = 16}

\item{marker.col}{Color for marker}

\item{marker.size}{Numeric: Marker size.}

\item{symbol}{Character: Marker symbol.}

\item{fit.col}{Color: Color of the fit line.}

\item{fit.alpha}{Float [0, 1]: Transparency for fit line}

\item{fit.lwd}{Float: Fit line width}

\item{se.col}{Color for \code{se.fit}}

\item{se.alpha}{Alpha for \code{se.fit}}

\item{scatter.type}{Character: "scatter", "scattergl", "scatter3d", "scatterternary",
"scatterpolar", "scattermapbox",}

\item{show.marginal.x}{Logical: If TRUE, add marginal distribution line markers on x-axis}

\item{show.marginal.y}{Logical: If TRUE, add marginal distribution line markers on y-axis}

\item{marginal.x}{Numeric: Data whose distribution will be shown on x-axis. Only
specify if different from \code{x}}

\item{marginal.y}{Numeric: Data whose distribution will be shown on y-axis. Only
specify if different from \code{y}}

\item{marginal.x.y}{Numeric: Y position of marginal markers on x-axis}

\item{marginal.y.x}{Numeric: X position of marginal markers on y-axis}

\item{marginal.col}{Color for marginal markers}

\item{marginal.alpha}{Numeric: Alpha for marginal markers}

\item{marginal.size}{Numeric: Size of marginal markers}

\item{legend}{Logical: If TRUE, draw legend. Default = NULL, which will be set to
TRUE if there are more than 1 groups, or \code{fit} is set}

\item{legend.xy}{Numeric, vector, length 2: x and y for plotly's legend}

\item{legend.xanchor}{Character: Legend's x anchor: "left", "center",
"right", "auto"}

\item{legend.yanchor}{Character: Legend's y anchor: "top", "middle",
"bottom", "auto"}

\item{legend.orientation}{"v" or "h" for vertical or horizontal}

\item{legend.col}{Color: Legend text color. Default = NULL, determined by
theme}

\item{legend.bg}{Color: Background color for legend}

\item{legend.border.col}{Color: Border color for legend}

\item{legend.borderwidth}{Numeric: Border width for legend}

\item{legend.group.gap}{Numeric: Gap between legend groups}

\item{x.showspikes}{Logical: If TRUE, show spikes on x-axis}

\item{y.showspikes}{Logical: If TRUE, show spikes on y-axis}

\item{spikedash}{Character: Dash type for spikes}

\item{spikemode}{Character: "across", "toaxis", "marker", or any combination of those
joined by \code{+}, e.g. "toaxis+across+marker"}

\item{spikesnap}{Character: "data", "cursor", "hovered data"}

\item{spikecolor}{Color for spikes}

\item{spikethickness}{Numeric: Thickness of spikes}

\item{margin}{Named list: plot margins.}

\item{main.y}{Numeric: Y position of main title}

\item{main.yanchor}{Character: "top", "middle", "bottom"}

\item{subtitle.x}{Numeric: X position of subtitle relative to paper}

\item{subtitle.y}{Numeric: Y position of subtitle relative to paper}

\item{subtitle.xref}{Character: "paper", "x", "y"}

\item{subtitle.yref}{Character: "paper", "x", "y"}

\item{subtitle.xanchor}{Character: "left", "center", "right"}

\item{subtitle.yanchor}{Character: "top", "middle", "bottom"}

\item{automargin.x}{Logical: If TRUE, automatically set x-axis amrgins}

\item{automargin.y}{Logical: If TRUE, automatically set y-axis amrgins}

\item{xlim}{Float vector, length 2: x-axis limits}

\item{ylim}{Float, vector, length 2: y-axis limits.}

\item{axes.equal}{Logical: Should axes be equal? Defaults to FALSE}

\item{diagonal}{Logical: If TRUE, draw diagonal line.}

\item{diagonal.col}{Color: Color for \code{diagonal}.}

\item{diagonal.alpha}{Float: Alpha for \code{diagonal}}

\item{fit.params}{List: Arguments for learner defined by \code{fit}.
Default = NULL, i.e. use default learner parameters}

\item{vline}{Float, vector: If defined, draw a vertical line at this x
value(s). Default = NULL}

\item{vline.col}{Color for \code{vline}. Default = theme$fg}

\item{vline.width}{Float: Width for \code{vline}. Default = 1}

\item{vline.dash}{Character: Type of line to draw: "solid", "dot", "dash",
"longdash", "dashdot",
or "longdashdot"}

\item{hline}{Float: If defined, draw a horizontal line at this y value.}

\item{hline.col}{Color for \code{hline}. Default = "#ff0000" (red)}

\item{hline.width}{Float: Width for \code{hline}. Default = 1}

\item{hline.dash}{Character: Type of line to draw: "solid", "dot", "dash",
"longdash", "dashdot",
or "longdashdot"}

\item{hovertext}{List of character vectors with hovertext to include for each group
of markers}

\item{width}{Numeric: Force plot size to this width. Default = NULL, i.e. fill
available space}

\item{height}{Numeric: Force plot size to this height. Default = NULL, i.e. fill
available space}

\item{displayModeBar}{Logical: If TRUE, show plotly's modebar}

\item{modeBar.file.format}{Character: "svg", "png", "jpeg", "pdf" / any
output file type supported by plotly and your system}

\item{scrollZoom}{Logical: If TRUE, enable scroll zoom}

\item{filename}{Character: Path to file to save static plot. Default = NULL}

\item{file.width}{Integer: File width in pixels for when \code{filename} is
set.}

\item{file.height}{Integer: File height in pixels for when \code{filename}
is set.}

\item{file.scale}{Numeric: If saving to file, scale plot by this number}

\item{trace}{Integer: The height the number the more diagnostic info is
printed to the console}

\item{...}{Additional arguments passed to theme}
}
\description{
Draw interactive scatter plots using \code{plotly}
}
\details{
use theme$tick.labels.col for both tick color and tick label color - this may change
}
\examples{
\dontrun{
dplot3_xy(iris$Sepal.Length, iris$Petal.Length,
  fit = "gam", se.fit = TRUE, group = iris$Species
)
}

}
\author{
E.D. Gennatas
}
