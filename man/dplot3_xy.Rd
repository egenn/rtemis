% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dplot3_xy.R
\name{dplot3_xy}
\alias{dplot3_xy}
\title{Interactive Scatter Plots}
\usage{
dplot3_xy(
  x,
  y = NULL,
  fit = NULL,
  se.fit = FALSE,
  se.times = 1.96,
  cluster = NULL,
  cluster.params = list(k = 2),
  group = NULL,
  formula = NULL,
  rsq = TRUE,
  mode = "markers",
  order.on.x = NULL,
  main = NULL,
  xlab = NULL,
  ylab = NULL,
  col = NULL,
  alpha = NULL,
  bg = NULL,
  plot.bg = NULL,
  theme = rtTheme,
  palette = rtPalette,
  axes.square = FALSE,
  group.names = NULL,
  font.size = 16,
  marker.col = NULL,
  marker.size = 8,
  symbol = "circle",
  fit.col = NULL,
  fit.alpha = 0.8,
  fit.lwd = 2.5,
  se.col = NULL,
  se.alpha = 0.4,
  scatter.type = "scatter",
  legend = NULL,
  legend.xy = c(0, 1),
  legend.xanchor = "left",
  legend.yanchor = "auto",
  legend.orientation = "v",
  legend.col = NULL,
  legend.bg = "#FFFFFF00",
  legend.border.col = "#FFFFFF00",
  legend.borderwidth = 0,
  legend.group.gap = 0,
  x.showspikes = FALSE,
  y.showspikes = FALSE,
  spikedash = "solid",
  spikemode = "across",
  spikesnap = "hovered data",
  spikecolor = NULL,
  spikethickness = 1,
  margin = list(b = 65, l = 65, t = 50, r = 10, pad = 0),
  automargin.x = TRUE,
  automargin.y = TRUE,
  xlim = NULL,
  ylim = NULL,
  axes.equal = FALSE,
  diagonal = FALSE,
  diagonal.col = NULL,
  diagonal.alpha = 0.2,
  fit.params = list(),
  vline = NULL,
  vline.col = theme$fg,
  vline.width = 1,
  vline.dash = "dot",
  hline = NULL,
  hline.col = theme$fg,
  hline.width = 1,
  hline.dash = "dot",
  hovertext = NULL,
  width = NULL,
  height = NULL,
  displayModeBar = TRUE,
  trace = 0,
  filename = NULL,
  file.width = 500,
  file.height = 500,
  file.scale = 1,
  ...
)
}
\arguments{
\item{x}{Numeric, vector/data.frame/list: x-axis data. If y is NULL and \code{NCOL(x) > 1}, first two columns used as
\code{x} and \code{y}, respectively}

\item{y}{Numeric, vector/data.frame/list: y-axis data}

\item{fit}{Character: \pkg{rtemis} model to calculate y ~ x fit. Options: see \code{modSelect}
Can also be Logical, which will give a GAM fit if TRUE. If you specify "NLA", the activation function should
be passed as a string.}

\item{se.fit}{Logical: If TRUE, draw the standard error of the fit}

\item{se.times}{Draw polygon or lines at +/- \code{se.times} * standard error of fit. Defaults to 2
(1.96 * standard error corresponds to 95\% confidence interval)}

\item{cluster}{Character: Clusterer name. Will cluster \code{data.frame(x, y)} and
pass result to \code{group}. Run \link{clustSelect} for options}

\item{cluster.params}{List: Names list of parameters to pass to the \code{cluster} function}

\item{group}{Vector: will be converted to factor.
If \code{data} is provided, name of variable, unquoted.}

\item{formula}{Formula: Provide a formula to be solved using \link{s_NLS}. If provided, \code{fit} is
forced to \code{'nls'}. e.g. y ~ b * m ^ x for a power curve. Note: \code{nls} is prone to errors
and warnings, but is powerful. Use single letters for parameter names, no numbers.}

\item{rsq}{Logical: If TRUE, print R-squared values in legend if \code{fit} is set}

\item{mode}{Character, vector: "markers", "lines", "markers+lines". Default = "markers"}

\item{order.on.x}{Logical: If TRUE, order \code{x} and \code{y} on \code{x}. Default = NULL, which becomes
\code{TRUE} if \code{mode} includes lines.}

\item{main}{Character: Plot title. Default = NULL}

\item{xlab}{Character: x-axis label. Default = NULL}

\item{ylab}{Character: y-axis label. Default = NULL}

\item{col}{Color for markers. Default=NULL, which will draw colors from palette}

\item{alpha}{Float (0, 1]: Transparency for bar colors. Default = .8}

\item{theme}{Character: Theme to use: Use \code{themes()} to get available 
themes}

\item{palette}{Character: Name of \pkg{rtemis} palette to use.
Default = "rtCol1". Only used if \code{col = NULL}}

\item{axes.square}{Logical: If TRUE: draw a square plot to fill the graphic device.
Default = FALSE. Note: If TRUE, the device size at time of call is captured and height and width are set so as
to draw the largest square available. This means that resizing the device window will not automatically resize the
plot.}

\item{group.names}{Character, vector, length = NROW(x): Group names. 
Default = NULL, which uses \code{rownames(x)}}

\item{font.size}{Float: Font size for all labels. Default = 16}

\item{marker.col}{Color for marker}

\item{fit.col}{Color: Color of the fit line.}

\item{fit.alpha}{Float [0, 1]: Transparency for fit line}

\item{fit.lwd}{Float: Fit line width}

\item{se.col}{Color for \code{se.fit}}

\item{se.alpha}{Alpha for \code{se.fit}}

\item{legend}{Logical: If TRUE, draw legend. Default = NULL, which will be set to TRUE if there are more than 1
groups, or \code{fit} is set}

\item{legend.xy}{Numeric, vector, length 2: x and y for plotly's legend}

\item{legend.xanchor}{Character: Legend's x anchor: "left", "center", 
"right", "auto"}

\item{legend.yanchor}{Character: Legend's y anchor: "top", "middle", 
"bottom", "auto"}

\item{legend.orientation}{"v" or "h" for vertical or horizontal}

\item{legend.col}{Color: Legend text color. Default = NULL, determined by 
theme}

\item{margin}{Named list: plot margins.}

\item{automargin.x}{Logical: If TRUE, automatically set x-axis amrgins}

\item{automargin.y}{Logical: If TRUE, automatically set y-axis amrgins}

\item{xlim}{Float vector, length 2: x-axis limits}

\item{ylim}{Float, vector, length 2: y-axis limits.}

\item{axes.equal}{Logical: Should axes be equal? Defaults to FALSE}

\item{diagonal}{Logical: If TRUE, draw diagonal line. Default = FALSE}

\item{diagonal.col}{Color: Color for \code{diagonal}. Default = "gray50"}

\item{diagonal.alpha}{Float: Alpha for \code{diagonal} Default = .5}

\item{fit.params}{List: Arguments for learner defined by \code{fit}. Default = NULL, i.e. use default learner
parameters}

\item{vline}{Vector: x-value(s) for vertical lines. Default = NULL}

\item{vline.col}{Color for vertical lines}

\item{hline}{Float: If defined, draw a horizontal line at this y value.}

\item{hline.col}{Color for \code{hline}. Default = "#ff0000" (red)}

\item{hline.width}{Float: Width for \code{hline}. Default = 1}

\item{hline.dash}{Character: Type of line to draw: "solid", "dot", "dash", 
"longdash", "dashdot",
or "longdashdot"}

\item{hovertext}{List of character vectors with hovertext to include for each group of markers}

\item{width}{Float: Force plot size to this width. Default = NULL, i.e. fill available space}

\item{height}{Float: Force plot size to this height. Default = NULL, i.e. fill available space}

\item{displayModeBar}{Logical: If TRUE, show plotly's modebar}

\item{trace}{Integer: The hight the number the more diagnostic info is 
printed to the console}

\item{filename}{Character: Path to file to save static plot. Default = NULL}

\item{file.width}{Integer: File width in pixels for when \code{filename} is 
set.}

\item{file.height}{Integer: File height in pixels for when \code{filename} 
is set.}

\item{file.scale}{Numeric: If saving to file, scale plot by this number}

\item{...}{Additional arguments passed to theme}
}
\description{
Draw interactive scatter plots using \code{plotly}
}
\details{
use theme$tick.labels.col for both tick color and tick label color - this may change
}
\examples{
\dontrun{
dplot3_xy(iris$Sepal.Length, iris$Petal.Length,
    fit = "gam", se.fit = TRUE, group = iris$Species
)
}

}
\author{
E.D. Gennatas
}
