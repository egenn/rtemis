% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/draw_bar.R
\name{draw_bar}
\alias{draw_bar}
\title{Interactive Barplots}
\usage{
draw_bar(
  x,
  main = NULL,
  xlab = NULL,
  ylab = NULL,
  col = NULL,
  alpha = 1,
  horizontal = FALSE,
  theme = choose_theme(),
  palette = rtemis_palette,
  barmode = c("group", "relative", "stack", "overlay"),
  group_names = NULL,
  order_by_val = FALSE,
  ylim = NULL,
  hovernames = NULL,
  feature_names = NULL,
  font_size = 16,
  annotate = FALSE,
  annotate_col = theme[["labs_col"]],
  legend = NULL,
  legend_col = NULL,
  legend_xy = c(1, 1),
  legend_orientation = "v",
  legend_xanchor = "left",
  legend_yanchor = "auto",
  hline = NULL,
  hline_col = NULL,
  hline_width = 1,
  hline_dash = "solid",
  hline_annotate = NULL,
  hline_annotation_x = 1,
  margin = list(b = 65, l = 65, t = 50, r = 10, pad = 0),
  automargin_x = TRUE,
  automargin_y = TRUE,
  padding = 0,
  displayModeBar = TRUE,
  modeBar_file_format = "svg",
  filename = NULL,
  file_width = 500,
  file_height = 500,
  file_scale = 1,
  verbosity = 0L
)
}
\arguments{
\item{x}{vector (possibly named), matrix, or data.frame: If matrix or
data.frame, rows are groups (can be 1 row), columns are features}

\item{main}{Character: Main plot title.}

\item{xlab}{Character: x-axis label.}

\item{ylab}{Character: y-axis label.}

\item{col}{Color, vector: Color for bars. Default NULL, which will draw
colors from \code{palette}}

\item{alpha}{Float (0, 1]: Transparency for bar colors.}

\item{horizontal}{Logical: If TRUE, plot bars horizontally}

\item{theme}{Theme object.}

\item{palette}{Character: Name of \pkg{rtemis} palette to use.}

\item{barmode}{Character: Type of bar plot to make: "group", "relative",
"stack", "overlay". Default = "group". Use
"relative" for stacked bars, wich handles negative values correctly,
unlike "stack", as of writing.}

\item{group_names}{Character, vector, length = NROW(x): Group names.
Default = NULL, which uses \code{rownames(x)}}

\item{order_by_val}{Logical: If TRUE, order bars by increasing value.
Only use for single group data.}

\item{ylim}{Float, vector, length 2: y-axis limits.}

\item{hovernames}{Character, vector: Optional character vector to show on
hover over each bar.}

\item{feature_names}{Character, vector, length = NCOL(x): Feature names.
Default = NULL, which uses \code{colnames(x)}}

\item{font_size}{Float: Font size for all labels.}

\item{annotate}{Logical: If TRUE, annotate stacked bars}

\item{annotate_col}{Color for annotations}

\item{legend}{Logical: If TRUE, draw legend. Default = NULL, and will be
turned on if there is more than one feature present}

\item{legend_col}{Color: Legend text color. Default = NULL, determined by
theme}

\item{legend_xy}{Numeric, vector, length 2: x and y for plotly's legend}

\item{legend_orientation}{"v" or "h" for vertical or horizontal}

\item{legend_xanchor}{Character: Legend's x anchor: "left", "center",
"right", "auto"}

\item{legend_yanchor}{Character: Legend's y anchor: "top", "middle",
"bottom", "auto"}

\item{hline}{Float: If defined, draw a horizontal line at this y value.}

\item{hline_col}{Color for \code{hline}.}

\item{hline_width}{Float: Width for \code{hline}.}

\item{hline_dash}{Character: Type of line to draw: "solid", "dot", "dash",
"longdash", "dashdot",
or "longdashdot"}

\item{hline_annotate}{Character: Text of horizontal line annotation if
\code{hline} is set}

\item{hline_annotation_x}{Numeric: x position to place annotation with paper
as reference. 0: to the left of the plot area; 1: to the right of the plot area}

\item{margin}{Named list: plot margins.}

\item{automargin_x}{Logical: If TRUE, automatically set x-axis margins}

\item{automargin_y}{Logical: If TRUE, automatically set y-axis margins}

\item{padding}{Integer: N pixels to pad plot.}

\item{displayModeBar}{Logical: If TRUE, show plotly's modebar}

\item{modeBar_file_format}{Character: "svg", "png", "jpeg", "pdf" / any
output file type supported by plotly and your system}

\item{filename}{Character: Path to file to save static plot.}

\item{file_width}{Integer: File width in pixels for when \code{filename} is
set.}

\item{file_height}{Integer: File height in pixels for when \code{filename}
is set.}

\item{file_scale}{Numeric: If saving to file, scale plot by this number}

\item{verbosity}{Integer: Verbosity level.}
}
\value{
\code{plotly} object.
}
\description{
Draw interactive barplots using \code{plotly}
}
\examples{
\dontrun{
draw_bar(VADeaths, legend_xy = c(0, 1))
draw_bar(VADeaths, legend_xy = c(1, 1), legend_xanchor = "left")
# simple individual bars
a <- c(4, 7, 2)
draw_bar(a)
# if input is a data.frame, each row is a group and each column is a feature
b <- data.frame(x = c(3, 5, 7), y = c(2, 1, 8), z = c(4, 5, 2))
rownames(b) <- c("Jen", "Ben", "Ren")
draw_bar(b)
# stacked
draw_bar(b, barmode = "stack")
}
}
\author{
EDG
}
