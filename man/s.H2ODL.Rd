% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/s.H2ODL.R
\name{s.H2ODL}
\alias{s.H2ODL}
\title{Deep Learning on H2O [C, R]}
\usage{
s.H2ODL(
  x,
  y = NULL,
  x.test = NULL,
  y.test = NULL,
  x.valid = NULL,
  y.valid = NULL,
  x.name = NULL,
  y.name = NULL,
  ip = "localhost",
  port = 54321,
  n.hidden.nodes = c(20, 20),
  epochs = 1000,
  activation = "Rectifier",
  mini.batch.size = 1,
  learning.rate = 0.005,
  adaptive.rate = TRUE,
  rho = 0.99,
  epsilon = 1e-08,
  rate.annealing = 1e-06,
  rate.decay = 1,
  momentum.start = 0,
  momentum.ramp = 1e+06,
  momentum.stable = 0,
  nesterov.accelerated.gradient = TRUE,
  input.dropout.ratio = 0,
  hidden.dropout.ratios = NULL,
  l1 = 0,
  l2 = 0,
  max.w2 = 3.4028235e+38,
  nfolds = 0,
  initial.biases = NULL,
  initial.weights = NULL,
  loss = "Automatic",
  distribution = "AUTO",
  stopping.rounds = 5,
  stopping.metric = "AUTO",
  upsample = FALSE,
  downsample = FALSE,
  resample.seed = NULL,
  na.action = na.fail,
  n.cores = rtCores,
  print.plot = TRUE,
  plot.fitted = NULL,
  plot.predicted = NULL,
  plot.theme = getOption("rt.fit.theme", "lightgrid"),
  question = NULL,
  verbose = TRUE,
  trace = 0,
  outdir = NULL,
  save.mod = ifelse(!is.null(outdir), TRUE, FALSE),
  ...
)
}
\arguments{
\item{x}{Vector / Matrix / Data Frame: Training set Predictors}

\item{y}{Vector: Training set outcome}

\item{x.test}{Vector / Matrix / Data Frame: Testing set Predictors}

\item{y.test}{Vector: Testing set outcome}

\item{x.valid}{Vector / Matrix / Data Frame: Validation set Predictors}

\item{y.valid}{Vector: Validation set outcome}

\item{x.name}{Character: Name for feature set}

\item{y.name}{Character: Name for outcome}

\item{ip}{Character: IP address of H2O server. Default = "localhost"}

\item{port}{Integer: Port number for server. Default = 54321}

\item{n.hidden.nodes}{Integer vector of length equal to the number of hidden layers you wish to create}

\item{epochs}{Integer: How many times to iterate through the dataset. Default = 1000}

\item{activation}{Character: Activation function to use: "Tanh", "TanhWithDropout", "Rectifier", "RectifierWithDropout",
"Maxout", "MaxoutWithDropout". Default = "Rectifier"}

\item{learning.rate}{Float: Learning rate to use for training. Default = .005}

\item{adaptive.rate}{Logical: If TRUE, use adaptive learning rate. Default = TRUE}

\item{rate.annealing}{Float: Learning rate annealing: rate / (1 + rate_annealing * samples). Default = 1e-6}

\item{input.dropout.ratio}{Float (0, 1): Dropout ratio for inputs}

\item{hidden.dropout.ratios}{Vector, Float (0, 2): Dropout ratios for hidden layers}

\item{l1}{Float (0, 1): L1 regularization
(introduces sparseness; i.e. sets many weights to 0; reduces variance, increases generalizability)}

\item{l2}{Float (0, 1): L2 regularization
(prevents very large absolute weights; reduces variance, increases generalizability)}

\item{upsample}{Logical: If TRUE, upsample cases to balance outcome classes (for Classification only)
Note: upsample will randomly sample with replacement if the length of the majority class is more than double
the length of the class you are upsampling, thereby introducing randomness}

\item{downsample}{Logical: If TRUE, downsample majority class to match size of minority class}

\item{resample.seed}{Integer: If provided, will be used to set the seed during upsampling.
Default = NULL (random seed)}

\item{na.action}{How to handle missing values. See \code{?na.fail}}

\item{n.cores}{Integer: Number of cores to use}

\item{print.plot}{Logical: if TRUE, produce plot using \code{mplot3}
Takes precedence over \code{plot.fitted} and \code{plot.predicted}. Default = TRUE}

\item{plot.fitted}{Logical: if TRUE, plot True (y) vs Fitted}

\item{plot.predicted}{Logical: if TRUE, plot True (y.test) vs Predicted.
Requires \code{x.test} and \code{y.test}}

\item{plot.theme}{Character: "zero", "dark", "box", "darkbox"}

\item{question}{Character: the question you are attempting to answer with this model, in plain language.}

\item{verbose}{Logical: If TRUE, print summary to screen.}

\item{trace}{Integer: If higher than 0, will print more information to the console. Default = 0}

\item{outdir}{Path to output directory.
If defined, will save Predicted vs. True plot, if available,
as well as full model output, if \code{save.mod} is TRUE}

\item{save.mod}{Logical: If TRUE, save all output to an RDS file in \code{outdir}
\code{save.mod} is TRUE by default if an \code{outdir} is defined. If set to TRUE, and no \code{outdir}
is defined, outdir defaults to \code{paste0("./s.", mod.name)}}

\item{...}{Additional parameters to pass to \code{h2o::h2o.deeplearning}}
}
\value{
\link{rtMod} object
}
\description{
Trains a Deep Neural Net using H2O (http://www.h2o.ai)
Check out the H2O Flow at \code{[ip]:[port]}, Default IP:port is "localhost:54321"
e.g. if running on localhost, point your web browser to \code{localhost:54321}
}
\details{
x & y form the training set.
x.test & y.test form the testing set used only to test model generalizability.
x.valid & y.valid form the validation set used to monitor training progress
}
\seealso{
\link{elevate} for external cross-validation

Other Supervised Learning: 
\code{\link{s.ADABOOST}()},
\code{\link{s.ADDTREE}()},
\code{\link{s.BART}()},
\code{\link{s.BAYESGLM}()},
\code{\link{s.BRUTO}()},
\code{\link{s.C50}()},
\code{\link{s.CART}()},
\code{\link{s.CTREE}()},
\code{\link{s.ET}()},
\code{\link{s.EVTREE}()},
\code{\link{s.GAM.default}()},
\code{\link{s.GAM.formula}()},
\code{\link{s.GAMSELX2}()},
\code{\link{s.GAMSELX}()},
\code{\link{s.GAMSEL}()},
\code{\link{s.GAM}()},
\code{\link{s.GBM3}()},
\code{\link{s.GBM}()},
\code{\link{s.GLMNET}()},
\code{\link{s.GLM}()},
\code{\link{s.GLS}()},
\code{\link{s.H2OGBM}()},
\code{\link{s.H2ORF}()},
\code{\link{s.IRF}()},
\code{\link{s.KNN}()},
\code{\link{s.LDA}()},
\code{\link{s.LM}()},
\code{\link{s.MARS}()},
\code{\link{s.MLRF}()},
\code{\link{s.NBAYES}()},
\code{\link{s.NLA}()},
\code{\link{s.NLS}()},
\code{\link{s.NW}()},
\code{\link{s.POLYMARS}()},
\code{\link{s.PPR}()},
\code{\link{s.PPTREE}()},
\code{\link{s.QDA}()},
\code{\link{s.QRNN}()},
\code{\link{s.RANGER}()},
\code{\link{s.RFSRC}()},
\code{\link{s.RF}()},
\code{\link{s.SGD}()},
\code{\link{s.SPLS}()},
\code{\link{s.SVM}()},
\code{\link{s.TFN}()},
\code{\link{s.XGBLIN}()},
\code{\link{s.XGB}()}

Other Deep Learning: 
\code{\link{d.H2OAE}()},
\code{\link{s.TFN}()}
}
\author{
E.D. Gennatas
}
\concept{Deep Learning}
\concept{Supervised Learning}
