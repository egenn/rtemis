% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/train.R
\name{train}
\alias{train}
\title{Train Supervised Learning Models}
\usage{
train(
  x,
  dat_validation = NULL,
  dat_testing = NULL,
  algorithm = NULL,
  preprocessor_parameters = NULL,
  hyperparameters = NULL,
  tuner_parameters = setup_GridSearch(),
  crossvalidation_parameters = NULL,
  weights = NULL,
  question = NULL,
  outdir = NULL,
  parallel_type = "future",
  verbosity = 1L
)
}
\arguments{
\item{x}{data.frame or similar: Training set data.}

\item{dat_validation}{data.frame or similar: Validation set data.}

\item{dat_testing}{data.frame or similar: Testing set data.}

\item{algorithm}{Character: Algorithm to use. Can be left NULL, if \code{hyperparameters} is defined.}

\item{preprocessor_parameters}{PreprocessorParameters object or NULL: Setup using \link{setup_Preprocessor}.}

\item{hyperparameters}{Hyperparameters object: Setup using one of \verb{setup_*} functions.}

\item{tuner_parameters}{TunerParameters object: Setup using \link{setup_GridSearch}.}

\item{crossvalidation_parameters}{ResamplerParameters object or NULL: Setup using \link{setup_Resampler}.}

\item{weights}{Optional vector of case weights.}

\item{question}{Optional character string defining the question that the model is trying to
answer.}

\item{outdir}{Character, optional: String defining the output directory.}

\item{parallel_type}{Character: "none", or "future".}

\item{verbosity}{Integer: Verbosity level.
\code{hyperparameters} is not defined. Avoid relying on this, instead use the appropriate \verb{setup_*}
function with the \code{hyperparameters} argument.}
}
\value{
Object of class \code{Regression(Supervised)}, \code{RegressionCV(SupervisedCV)},
\code{Classification(Supervised)}, or \code{ClassificationCV(SupervisedCV)}.
}
\description{
Preprocess, tune, train, and test supervised learning models with a single function
using nested crossvalidation.
}
\details{
Important: For binary classification, the outcome should be a factor where the 2nd level corresponds to the
positive class.

Note on resampling: You should never use an outer resampling method with
replacement if you will also be using an inner resampling (for tuning).
The duplicated cases from the outer resampling may appear both in the
training and testing sets of the inner resamples, leading to underestimated
testing error.
}
\author{
EDG
}
