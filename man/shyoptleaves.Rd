% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/shyoptleaves.R
\name{shyoptleaves}
\alias{shyoptleaves}
\title{\pkg{rtemis internal}: Low-level Stepwise Hybrid Tree procedure}
\usage{
shyoptleaves(
  x,
  y,
  x.valid = NULL,
  y.valid = NULL,
  lookback = FALSE,
  weights = NULL,
  max.leaves = 5,
  learning.rate = 1,
  select.leaves.smooth = TRUE,
  gamma = 0.1,
  n.quantiles = 20,
  minobsinnode = round(0.1 * length(y)),
  minbucket = round(0.05 * length(y)),
  lin.type = "glmnet",
  alpha = 1,
  lambda = 0.1,
  lambda.seq = NULL,
  cv.glmnet.nfolds = 5,
  which.cv.glmnet.lambda = "lambda.min",
  nbest = 1,
  nvmax = 3,
  .rho = TRUE,
  rho.max = 1000,
  loss.fn = if (is.factor(y)) class.loss else mse,
  verbose = TRUE,
  plot.tuning = TRUE,
  trace = 0,
  n.cores = parallelly::availableCores()
)
}
\arguments{
\item{x}{Data frame}

\item{y}{Numeric vector of outcome, i.e. dependent variable}

\item{lookback}{Logical: If TRUE, use validation error to decide best
number of leaves to use.}

\item{weights}{Numeric vector: Weights for cases. For classification, \code{weights} takes precedence
over \code{ipw}, therefore set \code{weights = NULL} if using \code{ipw}.
Note: If \code{weight} are provided, \code{ipw} is not used. Leave NULL if setting \code{ipw = TRUE}. Default = NULL}

\item{max.leaves}{Integer: Total number of terminal nodes to reach. 1 is a special case where no split is performed and a linear
model is trained. Otherwise, this should be an even number as each split introduces two children nodes.
Note: this is total N of nodes in the tree, with the root uncounted, not the number of terminal nodes.}

\item{learning.rate}{[gS] Numeric: learning rate for steps after initial
linear model}

\item{gamma}{[gS] Numeric: Soft weighting parameter. Weights of cases that 
do not belong to node get multiplied by this amount}

\item{lin.type}{Character: One of "glmnet", "forwardStepwise", "cv.glmnet", 
"lm.ridge", "allSubsets", "backwardStepwise", "glm", "solve", or "none"
to not fit linear models
See \link{lincoef} for more}

\item{lambda}{[gS] Numeric: lambda value for lin.type \code{glmnet}, 
\code{cv.glmnet}, \code{lm.ridge}}

\item{nvmax}{[gS] Integer: Number of max features to use for lin.type 
"allSubsets", "forwardStepwise", or "backwardStepwise". If values greater
than n of features in \code{x} are provided, they will be excluded}

\item{loss.fn}{Function with arguments y, Fval, weights. Allows you to define a custom loss function.}

\item{verbose}{Logical: If TRUE, print summary to screen.}

\item{plot.tuning}{Logical: If TRUE, plot validation error during gridsearch}

\item{trace}{Integer: If higher than 0, will print more information to the console. Default = 0}
}
\description{
Train an Stepwise Hybrid Tree for Classification & Regression
}
\details{
With \code{max.nodes = 0}, the model is logistic regression trained according to \code{lin.type}
(i.e. standard or regularized using glmnet, etc.)
Note that lambda is treated differently by \code{glmnet::glmnet} and \code{MASS::lm.ridge}
}
\author{
E.D. Gennatas
}
\keyword{internal}
