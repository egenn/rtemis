% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bag.R
\name{bag}
\alias{bag}
\title{Bag an \pkg{rtemis} learner for regression or classification [C, R]}
\usage{
bag(
  x,
  y = NULL,
  x.test = NULL,
  y.test = NULL,
  weights = NULL,
  mod = "cart",
  k = 10,
  mtry = NULL,
  mod.params = list(),
  ipw = TRUE,
  ipw.type = 2,
  upsample = FALSE,
  downsample = FALSE,
  resample.seed = NULL,
  .resample = rtset.resample(resampler = "strat.boot", n.resamples = k),
  aggr.fn = NULL,
  x.name = NULL,
  y.name = NULL,
  question = NULL,
  base.verbose = FALSE,
  verbose = TRUE,
  trace = 0,
  print.plot = TRUE,
  plot.fitted = NULL,
  plot.predicted = NULL,
  plot.theme = getOption("rt.theme"),
  print.base.plot = FALSE,
  n.cores = rtCores,
  parallel.type = ifelse(.Platform$OS.type == "unix", "fork", "psock"),
  outdir = NULL,
  ...
)
}
\arguments{
\item{x}{Numeric vector or matrix / data frame of features i.e. independent variables}

\item{y}{Numeric vector of outcome, i.e. dependent variable}

\item{x.test}{Numeric vector or matrix / data frame of testing set features
Columns must correspond to columns in \code{x}}

\item{y.test}{Numeric vector of testing set outcome}

\item{weights}{Numeric vector: Weights for cases. For classification, \code{weights} takes precedence
over \code{ipw}, therefore set \code{weights = NULL} if using \code{ipw}.
Note: If \code{weight} are provided, \code{ipw} is not used. Leave NULL if setting \code{ipw = TRUE}. Default = NULL}

\item{mod}{Character: Algorithm to bag, for options, see \link{modSelect}}

\item{k}{Integer: Number of base learners to train}

\item{mtry}{Integer: Number of features to randomly sample for each base learner.}

\item{mod.params}{Named list of arguments for \code{mod}}

\item{ipw}{Logical: If TRUE, apply inverse probability weighting (for Classification only).
Note: If \code{weights} are provided, \code{ipw} is not used. Default = TRUE}

\item{ipw.type}{Integer {0, 1, 2}
1: class.weights as in 0, divided by max(class.weights)
2: class.weights as in 0, divided by min(class.weights)
Default = 2}

\item{upsample}{Logical: If TRUE, upsample cases to balance outcome classes (for Classification only)
Note: upsample will randomly sample with replacement if the length of the majority class is more than double
the length of the class you are upsampling, thereby introducing randomness}

\item{downsample}{Logical: If TRUE, downsample majority class to match size of minority class}

\item{resample.seed}{Integer: If provided, will be used to set the seed during upsampling.
Default = NULL (random seed)}

\item{.resample}{List: Resample settings to use. There is no need to edit this, unless you want to change the type of
resampling. It will use stratified bootstrap by default. Use \link{rtset.resample} for convenience.
Default = \code{rtset.resample(resampler = "strat.boot", n.resamples = k)}}

\item{aggr.fn}{Function: used to average base learners' predictions. Default = mean for Classification, median for
Regression}

\item{x.name}{Character: Name for feature set}

\item{y.name}{Character: Name for outcome}

\item{question}{Character: the question you are attempting to answer with this model, in plain language.}

\item{base.verbose}{Logical: \code{verbose} argument passed to learner}

\item{verbose}{Logical: If TRUE, print summary to screen.}

\item{trace}{Integer: If > 0, print diagnostic info to console}

\item{print.plot}{Logical: if TRUE, produce plot using \code{mplot3}
Takes precedence over \code{plot.fitted} and \code{plot.predicted}. Default = TRUE}

\item{plot.fitted}{Logical: if TRUE, plot True (y) vs Fitted}

\item{plot.predicted}{Logical: if TRUE, plot True (y.test) vs Predicted.
Requires \code{x.test} and \code{y.test}}

\item{plot.theme}{Character: "zero", "dark", "box", "darkbox"}

\item{print.base.plot}{Logical: Passed to \code{print.plot} argument of base learner, i.e. if TRUE, print error plot
for each base learner}

\item{n.cores}{Integer: Number of cores to use}

\item{parallel.type}{Character: "fork" or "psock". Type of parallelization. Default = "fork" for macOS and Linux, "psock" for Windows}

\item{outdir}{Path to output directory.
If defined, will save Predicted vs. True plot, if available,
as well as full model output, if \code{save.mod} is TRUE}

\item{...}{Additional parameters to be passed to learner}

\item{outdir:}{Character: Path to output directory to save model. Default = NULL}
}
\description{
Train a bagged ensemble using any learner
}
\author{
E.D. Gennatas
}
