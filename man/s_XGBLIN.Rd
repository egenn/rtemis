% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/s_XGBLIN.R
\name{s_XGBLIN}
\alias{s_XGBLIN}
\title{XGBoost with linear booster (wrapper for \link{s_XGB})}
\usage{
s_XGBLIN(
  x,
  y = NULL,
  x.test = NULL,
  y.test = NULL,
  weights = NULL,
  lambda = NULL,
  lambda.bias = 0,
  alpha = 0,
  early_stopping_rounds = 50,
  force.nrounds = NULL,
  resampler = "strat.sub",
  n.resamples = 10,
  train.p = 0.75,
  strat.n.bins = 4,
  stratify.var = NULL,
  target.length = NULL,
  seed = NULL,
  importance = TRUE,
  n.cores = 1,
  nthread = detectCores(),
  parallel.type = c("psock", "fork"),
  print.plot = TRUE,
  outdir = NULL,
  verbose = TRUE,
  xgb.verbose = FALSE,
  ...
)
}
\arguments{
\item{x}{Numeric vector or matrix / data frame of features i.e. independent variables}

\item{y}{Numeric vector of outcome, i.e. dependent variable}

\item{x.test}{Numeric vector or matrix / data frame of testing set features
Columns must correspond to columns in \code{x}}

\item{y.test}{Numeric vector of testing set outcome}

\item{weights}{Numeric vector: Weights for cases. For classification, \code{weights} takes precedence
over \code{ipw}, therefore set \code{weights = NULL} if using \code{ipw}.
Note: If \code{weight} are provided, \code{ipw} is not used. Leave NULL if setting \code{ipw = TRUE}. Default = NULL}

\item{lambda}{[gS] L2 regularization on weights}

\item{alpha}{[gS] L1 regularization on weights}

\item{force.nrounds}{Integer: Number of rounds to run if not estimating optimal number by CV}

\item{nthread}{Integer: Number of threads for xgboost using OpenMP. Only parallelize resamples
using \code{n.cores} or the xgboost execution using this setting. At the moment of writing, parallelization via this
parameter causes a linear booster to fail most of the times. Therefore, default is rtCores
for 'gbtree', 1 for 'gblinear'}

\item{print.plot}{Logical: if TRUE, produce plot using \code{mplot3}
Takes precedence over \code{plot.fitted} and \code{plot.predicted}. Default = TRUE}

\item{outdir}{Path to output directory.
If defined, will save Predicted vs. True plot, if available,
as well as full model output, if \code{save.mod} is TRUE}

\item{verbose}{Logical: If TRUE, print summary to screen.}

\item{xgb.verbose}{Integer: Verbose level for XGB learners used for tuning.}

\item{...}{Additional arguments to be passed to \link{s_XGB}}
}
\description{
Train an XGBoost learner with linear boosters
}
\details{
[gS] denotes vector will trigger grid search
Warning: Using \code{nthread > 1} may lower accuracy - test on your data
}
\seealso{
\link{elevate} for external cross-validation

Other Supervised Learning: 
\code{\link{s_ADABOOST}()},
\code{\link{s_ADDTREE}()},
\code{\link{s_BART}()},
\code{\link{s_BAYESGLM}()},
\code{\link{s_BRUTO}()},
\code{\link{s_C50}()},
\code{\link{s_CART}()},
\code{\link{s_CTREE}()},
\code{\link{s_ET}()},
\code{\link{s_EVTREE}()},
\code{\link{s_GAM.default}()},
\code{\link{s_GAM.formula}()},
\code{\link{s_GAMSELX2}()},
\code{\link{s_GAMSELX}()},
\code{\link{s_GAMSEL}()},
\code{\link{s_GAM}()},
\code{\link{s_GBM0}()},
\code{\link{s_GBM3.R}()},
\code{\link{s_GBM}()},
\code{\link{s_GLMNET}()},
\code{\link{s_GLM}()},
\code{\link{s_GLS}()},
\code{\link{s_H2ODL}()},
\code{\link{s_H2OGBM}()},
\code{\link{s_H2ORF}()},
\code{\link{s_IRF}()},
\code{\link{s_KNN}()},
\code{\link{s_LDA}()},
\code{\link{s_LMTREE}()},
\code{\link{s_LM}()},
\code{\link{s_MARS}()},
\code{\link{s_MLRF}()},
\code{\link{s_NBAYES}()},
\code{\link{s_NLA}()},
\code{\link{s_NLS}()},
\code{\link{s_NW}()},
\code{\link{s_POLYMARS}()},
\code{\link{s_PPR}()},
\code{\link{s_PPTREE}()},
\code{\link{s_QDA}()},
\code{\link{s_QRNN}()},
\code{\link{s_RANGER}()},
\code{\link{s_RFSRC}()},
\code{\link{s_RF}()},
\code{\link{s_SDA}()},
\code{\link{s_SGD}()},
\code{\link{s_SPLS}()},
\code{\link{s_SVM}()},
\code{\link{s_TFN}()},
\code{\link{s_XGBOOST}()},
\code{\link{s_XGB}()}
}
\author{
E.D. Gennatas
}
\concept{Supervised Learning}
