% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/s_LIHAD.R
\name{s_LIHAD}
\alias{s_LIHAD}
\title{The Linear Hard Hybrid Tree: Hard Additive Tree (no gamma) with Linear Nodes [R]}
\usage{
s_LIHAD(
  x,
  y = NULL,
  x.test = NULL,
  y.test = NULL,
  max.depth = 3,
  alpha = 0,
  lambda = 0.1,
  lincoef.params = setup.lincoef("glmnet"),
  minobsinnode = 2,
  minobsinnode.lin = 10,
  learning.rate = 1,
  part.minsplit = 2,
  part.xval = 0,
  part.max.depth = 1,
  part.cp = 0,
  weights = NULL,
  metric = "MSE",
  maximize = FALSE,
  grid.resample.params = setup.grid.resample(),
  keep.x = FALSE,
  simplify = TRUE,
  cxrcoef = FALSE,
  n.cores = rtCores,
  verbose = TRUE,
  verbose.predict = FALSE,
  trace = 0,
  x.name = NULL,
  y.name = NULL,
  question = NULL,
  outdir = NULL,
  print.plot = FALSE,
  plot.fitted = NULL,
  plot.predicted = NULL,
  plot.theme = rtTheme,
  save.mod = FALSE
)
}
\arguments{
\item{x}{Numeric vector or matrix / data frame of features i.e. independent variables}

\item{y}{Numeric vector of outcome, i.e. dependent variable}

\item{x.test}{Numeric vector or matrix / data frame of testing set features
Columns must correspond to columns in \code{x}}

\item{y.test}{Numeric vector of testing set outcome}

\item{max.depth}{[gS] Integer: Max depth of additive tree. Default = 3}

\item{alpha}{[gS] Float: \code{lincoef} alpha Overrides \code{lincoef.params} alpha}

\item{lambda}{[gS] Float: \code{lincoef} lambda. Overrides \code{lincoef.params} lambda}

\item{lincoef.params}{Named List: Output of \link{setup.lincoef}}

\item{minobsinnode}{[gS] Integer: Minimum N observations needed in node, before
considering splitting}

\item{minobsinnode.lin}{Integer: Minimum N observations needed in node in order to
train linear model.}

\item{learning.rate}{[gS] Float (0, 1): Learning rate.}

\item{part.max.depth}{Integer: Max depth for each tree model within the additive tree}

\item{part.cp}{[gS] Float: Minimum complexity needed to allow split by \code{rpart}.}

\item{weights}{Numeric vector: Weights for cases. For classification, \code{weights} takes precedence
over \code{ifw}, therefore set \code{weights = NULL} if using \code{ifw}.
Note: If \code{weight} are provided, \code{ifw} is not used. Leave NULL if setting \code{ifw = TRUE}.}

\item{cxrcoef}{Logical: Passed to \link{predict.lihad}, if TRUE, returns cases by
coefficients matrix}

\item{verbose}{Logical: If TRUE, print summary to screen.}

\item{trace}{Integer: If higher than 0, will print more information to the console.}

\item{x.name}{Character: Name for feature set}

\item{y.name}{Character: Name for outcome}

\item{question}{Character: the question you are attempting to answer with this model, in plain language.}

\item{outdir}{Path to output directory.
If defined, will save Predicted vs. True plot, if available,
as well as full model output, if \code{save.mod} is TRUE}

\item{print.plot}{Logical: if TRUE, produce plot using \code{mplot3}
Takes precedence over \code{plot.fitted} and \code{plot.predicted}.}

\item{plot.fitted}{Logical: if TRUE, plot True (y) vs Fitted}

\item{plot.predicted}{Logical: if TRUE, plot True (y.test) vs Predicted.
Requires \code{x.test} and \code{y.test}}

\item{plot.theme}{Character: "zero", "dark", "box", "darkbox"}

\item{save.mod}{Logical: If TRUE, save all output to an RDS file in \code{outdir}
\code{save.mod} is TRUE by default if an \code{outdir} is defined. If set to TRUE, and no \code{outdir}
is defined, outdir defaults to \code{paste0("./s.", mod.name)}}
}
\description{
Train a Linear Hard Hybrid Tree for Regression
}
\details{
The Hybrid Tree grows a tree using a sequence of regularized linear models and tree
stumps.
Use s_LINAD for the standard Linear Additive Tree Algorithm, which grows branches
stepwise and includes all observations weighted by gamma

Grid searched parameters: max.depth, alpha, lambda, minobsinnode, learning.rate,
part.cp
}
\author{
E.D. Gennatas
}
