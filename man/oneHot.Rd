% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/oneHot.R
\name{oneHot}
\alias{oneHot}
\alias{oneHot.default}
\alias{oneHot.data.frame}
\alias{oneHot.data.table}
\alias{dt_set_oneHot}
\title{One hot encoding}
\usage{
oneHot(x, xname = NULL, verbose = FALSE)

\method{oneHot}{default}(x, xname = NULL, verbose = TRUE)

\method{oneHot}{data.frame}(x, xname = NULL, verbose = TRUE)

\method{oneHot}{data.table}(x, xname = NULL, verbose = TRUE)

dt_set_oneHot(x, xname = NULL, verbose = TRUE)
}
\arguments{
\item{x}{Vector or data.frame}

\item{xname}{Character: Variable name}

\item{verbose}{Logical: If TRUE, print messages to console}
}
\value{
For vector input, a one-hot-encoded matrix, for data.frame frame
input, an expanded data.frame where all factors are one-hot encoded
}
\description{
One hot encode a vector or factors in a data.frame
}
\details{
A vector input will be one-hot encoded regardless of type by looking at all unique values. With data.frame input,
only column of type factor will be one-hot encoded.
This function is used by \link{preprocess}.
\code{oneHot.data.table} operates on a copy of its input.
\code{oneHot_} performs one-hot encoding in-place.
}
\examples{
\dontrun{
iris_oh <- oneHot(iris)
# factor with only one unique value but 2 levels:
vf <- factor(rep("alpha", 20), levels = c("alpha", "beta"))
vf_onehot <- oneHot(vf)
}
oneHot(iris) |> head()
ir <- data.table::as.data.table(iris)
ir_oh <- oneHot(ir)
ir_oh
ir <- data.table::as.data.table(iris)
# dt_set_oneHot operates in-place; therefore no assignment is used:
dt_set_oneHot(ir)
ir
}
\author{
E.D. Gennatas
}
