% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rt_ops.R
\name{lsapply}
\alias{lsapply}
\title{\code{lsapply}}
\usage{
lsapply(X, FUN, ..., outnames = NULL, simplify = FALSE)
}
\arguments{
\item{X}{a vector (atomic or list) or an \code{\link[base]{expression}}
    object.  Other objects (including classed objects) will be coerced
    by \code{base::\link[base]{as.list}}.}

\item{FUN}{the function to be applied to each element of \code{X}:
    see \sQuote{Details}.  In the case of functions like
    \code{+}, \code{\%*\%}, the function name must be backquoted or quoted.}

\item{...}{optional arguments to \code{FUN}.}

\item{outnames}{Character vector: Optional names to apply to output}

\item{simplify}{logical or character string; should the result be
    simplified to a vector, matrix or higher dimensional array if
    possible?  For \code{sapply} it must be named and not abbreviated.
    The default value, \code{TRUE}, returns a vector or matrix if appropriate,
    whereas if \code{simplify = "array"} the result may be an
    \code{\link[base]{array}} of \dQuote{rank}
    (\eqn{=}\code{length(dim(.))}) one higher than the result
    of \code{FUN(X[[i]])}.}
}
\description{
\code{lsapply}
}
