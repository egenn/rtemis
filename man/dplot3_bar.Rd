% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dplot3_bar.R
\name{dplot3_bar}
\alias{dplot3_bar}
\title{Interactive Barplots}
\usage{
dplot3_bar(
  x,
  main = NULL,
  xlab = NULL,
  ylab = NULL,
  col = NULL,
  alpha = 1,
  horizontal = FALSE,
  theme = rtTheme,
  palette = rtPalette,
  barmode = c("group", "relative", "stack", "overlay"),
  group.names = NULL,
  order.by.val = FALSE,
  ylim = NULL,
  hovernames = NULL,
  feature.names = NULL,
  font.size = 16,
  annotate = FALSE,
  annotate.col = theme$labs.col,
  legend = NULL,
  legend.col = NULL,
  legend.xy = c(1, 1),
  legend.orientation = "v",
  legend.xanchor = "left",
  legend.yanchor = "auto",
  hline = NULL,
  hline.col = NULL,
  hline.width = 1,
  hline.dash = "solid",
  hline.annotate = NULL,
  hline.annotation.x = 1,
  margin = list(b = 65, l = 65, t = 50, r = 10, pad = 0),
  automargin.x = TRUE,
  automargin.y = TRUE,
  padding = 0,
  displayModeBar = TRUE,
  modeBar.file.format = "svg",
  filename = NULL,
  file.width = 500,
  file.height = 500,
  file.scale = 1,
  trace = 0,
  ...
)
}
\arguments{
\item{x}{vector (possibly named), matrix, or data.frame: If matrix or
data.frame, rows are groups (can be 1 row), columns are features}

\item{main}{Character: Main plot title.}

\item{xlab}{Character: x-axis label.}

\item{ylab}{Character: y-axis label.}

\item{col}{Color, vector: Color for bars. Default NULL, which will draw
colors from \code{palette}}

\item{alpha}{Float (0, 1]: Transparency for bar colors. Default = .8}

\item{horizontal}{Logical: If TRUE, plot bars horizontally}

\item{theme}{List or Character: Either the output of a \verb{theme_*()} function or the name of  a
theme. Use \code{themes()} to get available theme names. Theme functions are of the form
\verb{theme_<name>}.}

\item{palette}{Character: Name of \pkg{rtemis} palette to use.
Default = "rtCol1". Only used if \code{col = NULL}}

\item{barmode}{Character: Type of bar plot to make: "group", "relative",
"stack", "overlay". Default = "group". Use
"relative" for stacked bars, wich handles negative values correctly,
unlike "stack", as of writing.}

\item{group.names}{Character, vector, length = NROW(x): Group names.
Default = NULL, which uses \code{rownames(x)}}

\item{order.by.val}{Logical: If TRUE, order bars by increasing value.
Only use for single group data. Default = NULL}

\item{ylim}{Float, vector, length 2: y-axis limits.}

\item{hovernames}{Character, vector: Optional character vector to show on
hover over each bar.}

\item{feature.names}{Character, vector, length = NCOL(x): Feature names.
Default = NULL, which uses \code{colnames(x)}}

\item{font.size}{Float: Font size for all labels. Default = 16}

\item{annotate}{Logical: If TRUE, annotate stacked bars}

\item{annotate.col}{Color for annotations}

\item{legend}{Logical: If TRUE, draw legend. Default = NULL, and will be
turned on if there is more than one feature present}

\item{legend.col}{Color: Legend text color. Default = NULL, determined by
theme}

\item{legend.xy}{Numeric, vector, length 2: x and y for plotly's legend}

\item{legend.orientation}{"v" or "h" for vertical or horizontal}

\item{legend.xanchor}{Character: Legend's x anchor: "left", "center",
"right", "auto"}

\item{legend.yanchor}{Character: Legend's y anchor: "top", "middle",
"bottom", "auto"}

\item{hline}{Float: If defined, draw a horizontal line at this y value.}

\item{hline.col}{Color for \code{hline}. Default = "#ff0000" (red)}

\item{hline.width}{Float: Width for \code{hline}. Default = 1}

\item{hline.dash}{Character: Type of line to draw: "solid", "dot", "dash",
"longdash", "dashdot",
or "longdashdot"}

\item{hline.annotate}{Character: Text of horizontal line annotation if
\code{hline} is set}

\item{hline.annotation.x}{Numeric: x position to place annotation with paper
as reference. 0: to the left of the plot area; 1: to the right of the plot area}

\item{margin}{Named list: plot margins.}

\item{automargin.x}{Logical: If TRUE, automatically set x-axis amrgins}

\item{automargin.y}{Logical: If TRUE, automatically set y-axis amrgins}

\item{padding}{Integer: N pixels to pad plot.}

\item{displayModeBar}{Logical: If TRUE, show plotly's modebar}

\item{modeBar.file.format}{Character: "svg", "png", "jpeg", "pdf" / any
output file type supported by plotly and your system}

\item{filename}{Character: Path to file to save static plot. Default = NULL}

\item{file.width}{Integer: File width in pixels for when \code{filename} is
set.}

\item{file.height}{Integer: File height in pixels for when \code{filename}
is set.}

\item{file.scale}{Numeric: If saving to file, scale plot by this number}

\item{trace}{Integer: The height the number the more diagnostic info is
printed to the console}

\item{...}{Additional arguments passed to theme}
}
\description{
Draw interactive barplots using \code{plotly}
}
\examples{
\dontrun{
dplot3_bar(VADeaths, legend.xy = c(0, 1))
dplot3_bar(VADeaths, legend.xy = c(1, 1), legend.xanchor = "left")
# simple individual bars
a <- c(4, 7, 2)
dplot3_bar(a)
# if input is a data.frame, each row is a group and each column is a feature
b <- data.frame(x = c(3, 5, 7), y = c(2, 1, 8), z = c(4, 5, 2))
rownames(b) <- c("Jen", "Ben", "Ren")
dplot3_bar(b)
# stacked
dplot3_bar(b, barmode = "stack")
}
}
\author{
E.D. Gennatas
}
