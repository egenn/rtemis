% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/s_POLYMARS.R
\name{s_POLYMARS}
\alias{s_POLYMARS}
\title{Multivariate adaptive polynomial spline regression (POLYMARS) [C, R]}
\usage{
s_POLYMARS(
  x,
  y = NULL,
  x.test = NULL,
  y.test = NULL,
  x.name = NULL,
  y.name = NULL,
  grid.resample.rtset = rtset.grid.resample(),
  bag.resample.rtset = NULL,
  weights = NULL,
  ipw = TRUE,
  ipw.type = 2,
  upsample = FALSE,
  downsample = FALSE,
  resample.seed = NULL,
  maxsize = ceiling(min(6 * (nrow(x)^{
     1/3
 }), nrow(x)/4, 100)),
  classify = NULL,
  n.cores = rtCores,
  print.plot = FALSE,
  plot.fitted = NULL,
  plot.predicted = NULL,
  plot.theme = rtTheme,
  question = NULL,
  verbose = TRUE,
  trace = 0,
  save.mod = FALSE,
  outdir = NULL,
  ...
)
}
\arguments{
\item{x}{Numeric vector or matrix of features, i.e. independent variables}

\item{y}{Numeric vector of outcome, i.e. dependent variable}

\item{x.test}{(Optional) Numeric vector or matrix of validation set features
must have set of columns as \code{x}}

\item{y.test}{(Optional) Numeric vector of validation set outcomes}

\item{x.name}{Character: Name for feature set}

\item{y.name}{Character: Name for outcome}

\item{grid.resample.rtset}{List: Output of \link{rtset.resample} defining 
\link{gridSearchLearn} parameters.}

\item{weights}{Numeric vector: Weights for cases. For classification, \code{weights} takes precedence
over \code{ipw}, therefore set \code{weights = NULL} if using \code{ipw}.
Note: If \code{weight} are provided, \code{ipw} is not used. Leave NULL if setting \code{ipw = TRUE}. Default = NULL}

\item{ipw}{Logical: If TRUE, apply inverse probability weighting (for Classification only).
Note: If \code{weights} are provided, \code{ipw} is not used. Default = TRUE}

\item{ipw.type}{Integer {0, 1, 2}
1: class.weights as in 0, divided by max(class.weights)
2: class.weights as in 0, divided by min(class.weights)
Default = 2}

\item{upsample}{Logical: If TRUE, upsample cases to balance outcome classes (for Classification only)
Note: upsample will randomly sample with replacement if the length of the majority class is more than double
the length of the class you are upsampling, thereby introducing randomness}

\item{downsample}{Logical: If TRUE, downsample majority class to match size of minority class}

\item{resample.seed}{Integer: If provided, will be used to set the seed during upsampling.
Default = NULL (random seed)}

\item{n.cores}{Integer: Number of cores to use.}

\item{print.plot}{Logical: if TRUE, produce plot using \code{mplot3}
Takes precedence over \code{plot.fitted} and \code{plot.predicted}. Default = TRUE}

\item{plot.fitted}{Logical: if TRUE, plot True (y) vs Fitted}

\item{plot.predicted}{Logical: if TRUE, plot True (y.test) vs Predicted.
Requires \code{x.test} and \code{y.test}}

\item{plot.theme}{Character: "zero", "dark", "box", "darkbox"}

\item{question}{Character: the question you are attempting to answer with this model, in plain language.}

\item{verbose}{Logical: If TRUE, print summary to screen.}

\item{save.mod}{Logical: If TRUE, save all output to an RDS file in \code{outdir}
\code{save.mod} is TRUE by default if an \code{outdir} is defined. If set to TRUE, and no \code{outdir}
is defined, outdir defaults to \code{paste0("./s.", mod.name)}}

\item{outdir}{Path to output directory.
If defined, will save Predicted vs. True plot, if available,
as well as full model output, if \code{save.mod} is TRUE}

\item{...}{Additional parameters to pass to \code{polspline::polymars}}
}
\value{
Object of class \link{rtMod}
}
\description{
Trains a POLYMARS model using \code{polspline::polymars} and validates it
}
\seealso{
\link{elevate} for external cross-validation

Other Supervised Learning: 
\code{\link{s_ADABOOST}()},
\code{\link{s_ADDTREE}()},
\code{\link{s_BART}()},
\code{\link{s_BAYESGLM}()},
\code{\link{s_BRUTO}()},
\code{\link{s_C50}()},
\code{\link{s_CART}()},
\code{\link{s_CTREE}()},
\code{\link{s_ET}()},
\code{\link{s_EVTREE}()},
\code{\link{s_GAM.default}()},
\code{\link{s_GAM.formula}()},
\code{\link{s_GAMSELX2}()},
\code{\link{s_GAMSELX}()},
\code{\link{s_GAMSEL}()},
\code{\link{s_GAM}()},
\code{\link{s_GBM3.R}()},
\code{\link{s_GBM}()},
\code{\link{s_GLMNET}()},
\code{\link{s_GLMTREE}()},
\code{\link{s_GLM}()},
\code{\link{s_GLS}()},
\code{\link{s_H2ODL}()},
\code{\link{s_H2OGBM}()},
\code{\link{s_H2ORF}()},
\code{\link{s_IRF}()},
\code{\link{s_KNN}()},
\code{\link{s_LDA}()},
\code{\link{s_LMTREE}()},
\code{\link{s_LM}()},
\code{\link{s_MARS}()},
\code{\link{s_MLRF}()},
\code{\link{s_NBAYES}()},
\code{\link{s_NLA}()},
\code{\link{s_NLS}()},
\code{\link{s_NW}()},
\code{\link{s_PPR}()},
\code{\link{s_PPTREE}()},
\code{\link{s_QDA}()},
\code{\link{s_QRNN}()},
\code{\link{s_RANGER}()},
\code{\link{s_RFSRC}()},
\code{\link{s_RF}()},
\code{\link{s_SDA}()},
\code{\link{s_SGD}()},
\code{\link{s_SPLS}()},
\code{\link{s_SVM}()},
\code{\link{s_TFN}()},
\code{\link{s_XGBOOST}()}
}
\author{
E.D. Gennatas
}
\concept{Supervised Learning}
