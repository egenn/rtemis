% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/draw_calibration.R
\name{draw_calibration}
\alias{draw_calibration}
\title{Draw calibration plot}
\usage{
draw_calibration(
  true_labels,
  predicted_prob,
  n_bins = 10L,
  bin_method = c("quantile", "equidistant"),
  binclasspos = 2L,
  main = NULL,
  subtitle = NULL,
  xlab = "Mean predicted probability",
  ylab = "Empirical risk",
  show_marginal_x = TRUE,
  marginal_x_y = -0.02,
  marginal_col = NULL,
  marginal_size = 10,
  mode = "markers+lines",
  show_brier = TRUE,
  theme = choose_theme(),
  filename = NULL,
  ...
)
}
\arguments{
\item{true_labels}{Factor or list of factors with true class labels}

\item{predicted_prob}{Numeric vector or list of numeric vectors with predicted probabilities}

\item{n_bins}{Integer: Number of windows to split the data into}

\item{bin_method}{Character: "quantile" or "equidistant": Method to bin the estimated
probabilities.}

\item{binclasspos}{Integer: Index of the positive class. The convention used in the package is
the second level is the positive class.}

\item{main}{Character: Main title}

\item{subtitle}{Character: Subtitle, placed bottom right of plot}

\item{xlab}{Character: x-axis label}

\item{ylab}{Character: y-axis label}

\item{show_marginal_x}{Logical: Add marginal plot of distribution of estimated probabilities}

\item{marginal_x_y}{Numeric: y position of marginal plot}

\item{marginal_col}{Character: Color of marginal plot}

\item{marginal_size}{Numeric: Size of marginal plot}

\item{mode}{Character: "lines", "markers", "lines+markers": How to plot.}

\item{show_brier}{Logical: If TRUE, add Brier scores to trace names.}

\item{theme}{Theme object.}

\item{filename}{Character: Path to save output.}

\item{...}{Additional arguments passed to \link{draw_scatter}}
}
\value{
A plotly object.
}
\description{
Draw calibration plot
}
\examples{
\dontrun{
data(segment_logistic, package = "probably")

# Plot the calibration curve of the original predictions
draw_calibration(
  true_labels = segment_logistic$Class,
  predicted_prob = segment_logistic$.pred_poor,
  n_bins = 10L,
  binclasspos = 2L
)

# Plot the calibration curve of the calibrated predictions
draw_calibration(
  true_labels = segment_logistic$Class,
  predicted_prob = calibrate(
    segment_logistic$Class,
    segment_logistic$.pred_poor
  )$fitted.values,
  n_bins = 10L,
  binclasspos = 2L
)
}
}
\author{
EDG
}
