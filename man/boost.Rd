% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/boost.R
\name{boost}
\alias{boost}
\title{Boost an \pkg{rtemis} learner for regression}
\usage{
boost(
  x,
  y = NULL,
  x.valid = NULL,
  y.valid = NULL,
  x.test = NULL,
  y.test = NULL,
  mod = "cart",
  resid = NULL,
  boost.obj = NULL,
  mod.params = list(),
  case.p = 1,
  weights = NULL,
  learning.rate = 0.1,
  earlystop.params = setup.earlystop(window = 30, window_decrease_pct_min = 0.01),
  earlystop.using = "train",
  tolerance = 0,
  tolerance.valid = 1e-05,
  max.iter = 10,
  init = NULL,
  x.name = NULL,
  y.name = NULL,
  question = NULL,
  base.verbose = FALSE,
  verbose = TRUE,
  trace = 0,
  print.progress.every = 5,
  print.error.plot = "final",
  prefix = NULL,
  plot.theme = rtTheme,
  plot.fitted = NULL,
  plot.predicted = NULL,
  print.plot = FALSE,
  print.base.plot = FALSE,
  plot.type = "l",
  outdir = NULL,
  ...
)
}
\arguments{
\item{x}{Numeric vector or matrix / data frame of features i.e. independent variables}

\item{y}{Numeric vector of outcome, i.e. dependent variable}

\item{x.valid}{Data.frame; optional: Validation data}

\item{y.valid}{Float, vector; optional: Validation outcome}

\item{x.test}{Numeric vector or matrix / data frame of testing set features
Columns must correspond to columns in \code{x}}

\item{y.test}{Numeric vector of testing set outcome}

\item{mod}{Character: Algorithm to train base learners, for options, see
\link{select_learn}. Default = "cart"}

\item{resid}{Float, vector, length = length(y): Residuals to work on. Do
not change unless you know what you're doing. Default = NULL, for regular
boosting}

\item{boost.obj}{(Internal use)}

\item{mod.params}{Named list of arguments for \code{mod}}

\item{case.p}{Float (0, 1]: Train each iteration using this perceent of
cases. Default = 1, i.e. use all cases}

\item{weights}{Numeric vector: Weights for cases. For classification, \code{weights} takes precedence
over \code{ifw}, therefore set \code{weights = NULL} if using \code{ifw}.
Note: If \code{weight} are provided, \code{ifw} is not used. Leave NULL if setting \code{ifw = TRUE}.}

\item{learning.rate}{Float (0, 1] Learning rate for the additive steps}

\item{earlystop.params}{List with early stopping parameters.
Set using \link{setup.earlystop}}

\item{earlystop.using}{Character: "train" or "valid". For the latter,
requires \code{x.valid}}

\item{tolerance}{Float: If training error <= this value, training stops}

\item{tolerance.valid}{Float: If validation error <= this value, training
stops}

\item{max.iter}{Integer: Maximum number of iterations (additive steps) to
perform. Default = 10}

\item{init}{Float: Initial value for prediction. Default = mean(y)}

\item{x.name}{Character: Name for feature set}

\item{y.name}{Character: Name for outcome}

\item{question}{Character: the question you are attempting to answer with this model, in plain language.}

\item{base.verbose}{Logical: \code{verbose} argument passed to learner}

\item{verbose}{Logical: If TRUE, print summary to screen.}

\item{trace}{Integer: If > 0, print diagnostic info to console}

\item{print.progress.every}{Integer: Print progress over this many iterations}

\item{print.error.plot}{String or Integer: "final" plots a training and
validation (if available) error curve at the end of training. If integer,
plot training and validation error curve every this many iterations during
training. "none" for no plot.}

\item{prefix}{Internal}

\item{plot.theme}{Character: "zero", "dark", "box", "darkbox"}

\item{plot.fitted}{Logical: if TRUE, plot True (y) vs Fitted}

\item{plot.predicted}{Logical: if TRUE, plot True (y.test) vs Predicted.
Requires \code{x.test} and \code{y.test}}

\item{print.plot}{Logical: if TRUE, produce plot using \code{mplot3}
Takes precedence over \code{plot.fitted} and \code{plot.predicted}.}

\item{print.base.plot}{Logical: Passed to \code{print.plot} argument of base
learner, i.e. if TRUE, print error plot for each base learner}

\item{plot.type}{Character: "l" or "p". Plot using lines or points.}

\item{outdir}{Path to output directory.
If defined, will save Predicted vs. True plot, if available,
as well as full model output, if \code{save.mod} is TRUE}

\item{...}{Additional parameters to be passed to learner define by \code{mod}}
}
\description{
Train an ensemble using boosting of any learner
}
\details{
If \code{learning.rate} is set to 0, a nullmod will be created
}
\author{
E.D. Gennatas
}
